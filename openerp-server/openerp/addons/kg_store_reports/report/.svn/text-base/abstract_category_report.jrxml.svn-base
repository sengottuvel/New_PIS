<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="abstract_category_report" language="groovy" pageWidth="792" pageHeight="612" orientation="Landscape" whenNoDataType="NoDataSection" columnWidth="752" leftMargin="20" rightMargin="20" topMargin="20" bottomMargin="20">
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<parameter name="location_id" class="java.lang.Integer"/>
	<parameter name="report_type" class="java.lang.String"/>
	<parameter name="product_id" class="java.lang.Integer"/>
	<parameter name="categ_id" class="java.lang.Integer"/>
	<parameter name="type" class="java.lang.String"/>
	<parameter name="p_to_date" class="java.lang.String"/>
	<parameter name="m_to_date" class="java.lang.String"/>
	<parameter name="user_id" class="java.lang.Integer"/>
	<parameter name="report_type_name" class="java.lang.String"/>
	<parameter name="user_name" class="java.lang.String"/>
	<queryString>
		<![CDATA[select
to_char(CURRENT_TIMESTAMP, 'DD-MM-YYYY HH12:MI:SS AM') AS New_Date,
r.category,
round(MAX(CASE WHEN r.type = 'open' THEN r.stock_value ELSE 0 END)::integer,2) AS open_stock_value,
round(MAX(CASE WHEN r.type = 'in' THEN r.stock_value ELSE 0 END)::integer,2) AS inward_value,
round(MAX(CASE WHEN r.type = 'out' THEN r.stock_value ELSE 0 END)::integer,2) AS outward_value,
round(MAX(CASE WHEN r.type = 'close' THEN r.stock_value ELSE 0 END)::integer,2) AS close_stock_value,
part.street as street1,
part.street2 as street2,
comp_city.name as city,
part.zip as zip,
part.phone as phone,
part.fax as fax,
part.email as email,

res_company.name as company_name


from

(



select categ1 as category,'open' as type,sum(stock_total_value) as stock_value

from

(select

distinct
product_name,
stock_uom,
type,
categ_id,
case when categ1 is not null then categ1
else 'No Category Assigned' end as
categ1,
close_stock as stock_qty,

( Sum(product_value) over(partition by product_name)) as stock_total_value,

res_company.name

from

(

select

distinct
product_name,
stock_uom,
type,
categ_id,
categ1_id,
categ1,


(Sum(in_qty) over(partition by product_name)
-
Sum(out_qty) over(partition by product_name) ) as close_stock,

( Sum(in_qty * rate) over(partition by product_name,rate)
-
Sum(out_qty * rate) over(partition by product_name,rate) ) as product_value


from

(select

prod_templ.name as product_name,
product_product.type as type,
product_uom.name as stock_uom,
sub_query.categ_id,
prod_categ1.id as categ1_id,
prod_categ1.name as categ1,
move_type as move_type,
Sum(case when move_type = 'in'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as in_qty,
Sum(case when move_type = 'out'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as out_qty,
rate

from

(select

product_id,

stock_uom,
categ_id,
categ1,
location_dest_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from

stock_move where move_type = 'in' and location_dest_id = $P{location_id}
and to_char(date::date,'yyyy-mm-dd') < $P{m_to_date}
and state='done'
and CASE

WHEN $P{report_type} = 'product_wise' THEN product_id in ($P{product_id})

ELSE product_id in (select distinct product_id from stock_move
)
END


group by product_id,stock_uom,move_type,categ1,location_dest_id,
move_type,rate,categ_id

union

select

product_id,
stock_uom,
categ_id,
categ1,
location_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from

stock_move where move_type = 'out' and location_id = $P{location_id}
and to_char(date::date,'yyyy-mm-dd') < $P{m_to_date}
and state='done'
and
CASE

WHEN $P{report_type} = 'product_wise' THEN product_id in ($P{product_id})

ELSE product_id in (select distinct product_id from stock_move)

END


group by product_id,stock_uom,move_type,categ1,location_id,
move_type,rate,categ_id )

sub_query



left outer join  product_product ON product_product.id = sub_query.product_id
left outer join  product_template prod_templ on prod_templ.id = product_product.product_tmpl_id
left outer join  product_uom on product_uom.id=sub_query.stock_uom
left outer join  product_category prod_categ1 on prod_categ1.id = sub_query.categ1

) as main_query

--where (in_qty - out_qty) > 0

) as query

left join res_company on res_company.id = 1


--where

--categ_id in (106,235,91)

--and type = 'consu'

--where
--categ1_id > 0

order by categ1

) a

group by categ1


---------------------------------------------------------
union all



select categ1 as category,'close' as type,sum(stock_total_value) as stock_value

from

(select

distinct
product_name,
stock_uom,
type,
categ_id,
case when categ1 is not null then categ1
else 'No Category Assigned' end as
categ1,
close_stock as stock_qty,

( Sum(product_value) over(partition by product_name)) as stock_total_value,

res_company.name

from

(

select

distinct
product_name,
stock_uom,
type,
categ_id,
categ1_id,
categ1,


(Sum(in_qty) over(partition by product_name)
-
Sum(out_qty) over(partition by product_name) ) as close_stock,

( Sum(in_qty * rate) over(partition by product_name,rate)
-
Sum(out_qty * rate) over(partition by product_name,rate) ) as product_value


from

(select

prod_templ.name as product_name,
product_product.type as type,
product_uom.name as stock_uom,
sub_query.categ_id,
prod_categ1.id as categ1_id,
prod_categ1.name as categ1,
move_type as move_type,
Sum(case when move_type = 'in'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as in_qty,
Sum(case when move_type = 'out'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as out_qty,
rate

from

(select

product_id,

stock_uom,
categ_id,
categ1,
location_dest_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from

stock_move where move_type = 'in' and location_dest_id = $P{location_id} and to_char(date::date,'yyyy-mm-dd') <= $P{m_to_date}
-- Product
and product_id in (select distinct product_id from stock_move
)
group by product_id,stock_uom,move_type,categ1,location_dest_id,
move_type,rate,categ_id

union

select

product_id,
stock_uom,
categ_id,
categ1,
location_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from
stock_move where move_type = 'out' and location_id = $P{location_id} and to_char(date::date,'yyyy-mm-dd') <= $P{m_to_date}
-- Product
and product_id in (select distinct product_id from stock_move
)
group by product_id,stock_uom,move_type,categ1,location_id,
move_type,rate,categ_id )

sub_query



left outer join  product_product ON product_product.id = sub_query.product_id
left outer join  product_template prod_templ on prod_templ.id = product_product.product_tmpl_id
left outer join  product_uom on product_uom.id=sub_query.stock_uom
left outer join  product_category prod_categ1 on prod_categ1.id = sub_query.categ1

) as main_query

--where (in_qty - out_qty) > 0

) as query

left join res_company on res_company.id = 1


--where

--categ_id in (106,235,91)

--and type = 'consu'

--where
--categ1_id > 0

order by categ1

) a

group by categ1


-------------------------------------------------------------------------------

union all


select categ1 as category,'in' as type, sum(stock_total_value) as stock_value

from

(select

distinct
product_name,
stock_uom,
type,
categ_id,
case when categ1 is not null then categ1
else 'No Category Assigned' end as
categ1,
close_stock as stock_qty,

( Sum(product_value) over(partition by product_name)) as stock_total_value,

res_company.name

from

(

select

distinct
product_name,
stock_uom,
type,
categ_id,
categ1_id,
categ1,


(Sum(in_qty) over(partition by product_name) ) as close_stock,

( Sum(in_qty * rate) over(partition by product_name,rate) ) as product_value


from

(select

prod_templ.name as product_name,
product_product.type as type,
product_uom.name as stock_uom,
sub_query.categ_id,
prod_categ1.id as categ1_id,
prod_categ1.name as categ1,
move_type as move_type,
Sum(case when move_type = 'in'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as in_qty,
rate

from

(select

product_id,

stock_uom,
categ_id,
categ1,
location_dest_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from

stock_move where move_type = 'in' and location_dest_id = $P{location_id} and to_char(date::date,'yyyy-mm-dd') = $P{m_to_date}
-- Product
and product_id in (select distinct product_id from stock_move
)
group by product_id,stock_uom,move_type,categ1,location_dest_id,
move_type,rate,categ_id

)

sub_query



left outer join  product_product ON product_product.id = sub_query.product_id
left outer join  product_template prod_templ on prod_templ.id = product_product.product_tmpl_id
left outer join  product_uom on product_uom.id=sub_query.stock_uom
left outer join  product_category prod_categ1 on prod_categ1.id = sub_query.categ1

) as main_query

--where (in_qty - out_qty) > 0

) as query

left join res_company on res_company.id = 1


--where

--categ_id in (106,235,91)

--and type = 'consu'

--where
--categ1_id > 0

order by categ1

) a

group by categ1


union all
-------------------------------------------------------------------------------

select categ1 as category,'out' as type,sum(stock_total_value) as stock_value

from

(select

distinct
product_name,
stock_uom,
type,
categ_id,
case when categ1 is not null then categ1
else 'No Category Assigned' end as
categ1,
close_stock as stock_qty,

( Sum(product_value) over(partition by product_name)) as stock_total_value,

res_company.name

from

(

select

distinct
product_name,
stock_uom,
type,
categ_id,
categ1_id,
categ1,


(
Sum(out_qty) over(partition by product_name) ) as close_stock,

(
Sum(out_qty * rate) over(partition by product_name,rate) ) as product_value


from

(select

prod_templ.name as product_name,
product_product.type as type,
product_uom.name as stock_uom,
sub_query.categ_id,
prod_categ1.id as categ1_id,
prod_categ1.name as categ1,
move_type as move_type,
Sum(case when move_type = 'out'
then stock_qty else 0 end) over(partition by product_id,move_type,rate) as out_qty,
rate

from

(
select

product_id,
stock_uom,
categ_id,
categ1,
location_id as location_id,
move_type as move_type,
sum(product_qty) as stock_qty,
price_tax as rate


from
stock_move where move_type = 'out' and location_id = $P{location_id} and to_char(date::date,'yyyy-mm-dd') = $P{m_to_date}
-- Product
and product_id in (select distinct product_id from stock_move
)
group by product_id,stock_uom,move_type,categ1,location_id,
move_type,rate,categ_id )

sub_query



left outer join  product_product ON product_product.id = sub_query.product_id
left outer join  product_template prod_templ on prod_templ.id = product_product.product_tmpl_id
left outer join  product_uom on product_uom.id=sub_query.stock_uom
left outer join  product_category prod_categ1 on prod_categ1.id = sub_query.categ1

) as main_query

--where (in_qty - out_qty) > 0

) as query

left join res_company on res_company.id = 1


--where

--categ_id in (106,235,91)

--and type = 'consu'

--where
--categ1_id > 0

order by categ1

) a

group by categ1


) r



left join res_company on res_company.id = 1
left join res_partner part on (part.id = res_company.partner_id)
left join res_city comp_city on (comp_city.id =res_company.city)
left join res_users users on (users.id = 1)
left join res_partner user_part on (user_part.id = users.partner_id)
group by r.category,part.street,part.street2,comp_city.name,part.zip,

part.phone,part.fax,part.email,res_company.name]]>
	</queryString>
	<field name="new_date" class="java.lang.String"/>
	<field name="category" class="java.lang.String"/>
	<field name="open_stock_value" class="java.math.BigDecimal"/>
	<field name="inward_value" class="java.math.BigDecimal"/>
	<field name="outward_value" class="java.math.BigDecimal"/>
	<field name="close_stock_value" class="java.math.BigDecimal"/>
	<field name="street1" class="java.lang.String"/>
	<field name="street2" class="java.lang.String"/>
	<field name="city" class="java.lang.String"/>
	<field name="zip" class="java.lang.String"/>
	<field name="phone" class="java.lang.String"/>
	<field name="fax" class="java.lang.String"/>
	<field name="email" class="java.lang.String"/>
	<field name="company_name" class="java.lang.String"/>
	<variable name="open_sum" class="java.math.BigDecimal" resetType="Column" calculation="Sum">
		<variableExpression><![CDATA[$F{open_stock_value}]]></variableExpression>
	</variable>
	<variable name="in_sum" class="java.math.BigDecimal" resetType="Column" calculation="Sum">
		<variableExpression><![CDATA[$F{inward_value}]]></variableExpression>
	</variable>
	<variable name="out_sum" class="java.math.BigDecimal" resetType="Column" calculation="Sum">
		<variableExpression><![CDATA[$F{outward_value}]]></variableExpression>
	</variable>
	<variable name="close_sum" class="java.math.BigDecimal" resetType="Column" calculation="Sum">
		<variableExpression><![CDATA[$F{close_stock_value}]]></variableExpression>
	</variable>
	<group name="Category Group">
		<groupExpression><![CDATA[$F{category}]]></groupExpression>
		<groupHeader>
			<band height="20">
				<textField>
					<reportElement x="452" y="0" width="100" height="20"/>
					<textElement textAlignment="Right" verticalAlignment="Middle"/>
					<textFieldExpression><![CDATA[$F{inward_value}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="552" y="0" width="100" height="20"/>
					<textElement textAlignment="Right" verticalAlignment="Middle"/>
					<textFieldExpression><![CDATA[$F{outward_value}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="652" y="0" width="100" height="20"/>
					<textElement textAlignment="Right" verticalAlignment="Middle"/>
					<textFieldExpression><![CDATA[$F{close_stock_value}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="295" y="0" width="157" height="20"/>
					<textElement textAlignment="Right" verticalAlignment="Middle"/>
					<textFieldExpression><![CDATA[$F{open_stock_value}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="0" y="0" width="295" height="20"/>
					<textElement verticalAlignment="Middle"/>
					<textFieldExpression><![CDATA[$F{category}]]></textFieldExpression>
				</textField>
			</band>
		</groupHeader>
	</group>
	<background>
		<band splitType="Stretch"/>
	</background>
	<pageHeader>
		<band height="100" splitType="Stretch">
			<textField>
				<reportElement x="0" y="0" width="752" height="20"/>
				<textElement>
					<font size="14" isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA[$F{company_name}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="20" width="752" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA[$F{street1}+$F{street2}+$F{city}+"-"+$F{zip}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="40" width="752" height="20"/>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font size="14" isBold="true" isItalic="false" isUnderline="false"/>
				</textElement>
				<textFieldExpression><![CDATA["STOCK REPORT"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="70" width="157" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA["As on : " +$P{p_to_date}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="552" y="70" width="200" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA["Report Type : "+$P{report_type_name}]]></textFieldExpression>
			</textField>
		</band>
	</pageHeader>
	<columnHeader>
		<band height="20" splitType="Stretch">
			<textField>
				<reportElement x="0" y="0" width="295" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Left" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["Category"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="295" y="0" width="157" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["Opening Stock Value"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="452" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["Inward Value"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="552" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["Outward Value"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="652" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["Closing Value"]]></textFieldExpression>
			</textField>
		</band>
	</columnHeader>
	<columnFooter>
		<band height="20">
			<textField>
				<reportElement x="295" y="0" width="157" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA[$V{open_sum}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="452" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA[$V{in_sum}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="552" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA[$V{out_sum}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="652" y="0" width="100" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA[$V{close_sum}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="0" width="295" height="20"/>
				<box>
					<topPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font isBold="true"/>
				</textElement>
				<textFieldExpression><![CDATA["Total : "]]></textFieldExpression>
			</textField>
		</band>
	</columnFooter>
	<pageFooter>
		<band height="20">
			<textField>
				<reportElement x="224" y="0" width="188" height="20"/>
				<textElement textAlignment="Right"/>
				<textFieldExpression><![CDATA["Page "+$V{PAGE_NUMBER}+" of"]]></textFieldExpression>
			</textField>
			<textField evaluationTime="Report">
				<reportElement x="412" y="0" width="340" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA[" " + $V{PAGE_NUMBER}]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="0" width="224" height="20"/>
				<textElement/>
				<textFieldExpression><![CDATA[$P{user_name}+" "+"/"+" "+$F{new_date}]]></textFieldExpression>
			</textField>
		</band>
	</pageFooter>
	<noData>
		<band height="50">
			<textField>
				<reportElement x="0" y="0" width="752" height="20"/>
				<textElement textAlignment="Center" verticalAlignment="Middle"/>
				<textFieldExpression><![CDATA["No records found"]]></textFieldExpression>
			</textField>
		</band>
	</noData>
</jasperReport>
